{"version":3,"file":"static/js/753.46e1b1b5.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 16px;\n  padding-bottom: 40px;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  transition: transform 0.3s;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  &:hover {\n    transform: scale(1.05);\n    transition: 300ms linear;\n    box-shadow: 4px 4px 6px 0px rgba(0, 0, 0, 0.9);\n  }\n\n  > a {\n    text-decoration: none;\n  }\n\n  img {\n    max-width: 400px;\n  }\n`;\n\nexport const MovieName = styled.p`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n  font-weight: 700;\n  text-align: center;\n`;\n","import { CardWrapper, Container, MovieName } from './MoviesList.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {movies.map(({ poster_path, title, id }) => {\n        return (\n          <CardWrapper key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                alt={title}\n              />\n              <MovieName>{title}</MovieName>\n            </Link>\n          </CardWrapper>\n        );\n      })}\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Btn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  border-radius: 4px;\n  width: 40px;\n`;\n\nexport const Icon = styled(HiSearch)`\n  display: block;\n  width: 20px;\n  height: 20px;\n  right: 6px;\n`;\n","import { useState } from 'react';\nimport { Wrapper, Input, Icon, Form, Btn } from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const onInputChange = e => setValue(e.target.value);\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    onSubmit(value);\n    resetForm();\n  };\n\n  const resetForm = () => setValue('');\n\n  return (\n    <Wrapper>\n      <Form onSubmit={onSubmitForm}>\n        <Input\n          type=\"text\"\n          value={value}\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies...\"\n          onChange={onInputChange}\n        />\n        <Btn type=\"submit\">\n          <Icon />\n        </Btn>\n      </Form>\n    </Wrapper>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { searchMovies } from 'services/fetchAPI';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchValue = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchValue) return;\n    const fetchSearchMovies = async () => {\n      const data = await searchMovies(searchValue);\n      setMovies(data);\n    };\n    fetchSearchMovies();\n  }, [searchValue]);\n\n  const onInputSearch = value => {\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <main>\n      <SearchForm onSubmit={onInputSearch} />\n      {movies && <MoviesList movies={movies} />}\n    </main>\n  );\n};\n","import axios from 'axios';\n// import { Loader } from '../utils/spinner/spinner';\n\nconst API_KEY = 'e57746b2e4fe98cb5cc839cb405a15f1';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n"],"names":["Container","styled","CardWrapper","MovieName","MoviesList","movies","location","useLocation","map","poster_path","title","id","to","state","from","src","alt","Wrapper","Form","Input","Btn","Icon","HiSearch","SearchForm","onSubmit","useState","value","setValue","resetForm","e","preventDefault","type","autocomplete","autoFocus","placeholder","onChange","target","Movies","setMovies","useSearchParams","searchParams","setSearchParams","searchValue","get","useEffect","fetchSearchMovies","searchMovies","data","query","API_KEY","BASE_URL","getTrendingMovies","axios","response","results","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}