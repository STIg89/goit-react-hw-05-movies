{"version":3,"file":"static/js/561.ad3e23c8.chunk.js","mappings":"kRAEaA,EAAOC,EAAAA,GAAAA,GAAH,6HAQJC,EAAOD,EAAAA,GAAAA,GAAH,mOAQJE,EAAQF,EAAAA,GAAAA,IAAH,6CAILG,EAAOH,EAAAA,GAAAA,EAAH,iEAKJI,EAAYJ,EAAAA,GAAAA,IAAH,iF,kBCxBTK,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACE,SAACP,EAAD,UACGO,EAAKC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACnC,OACE,UAACV,EAAD,YACE,SAACC,EAAD,CACEU,IACmB,OAAjBJ,EAAA,0CACuCA,GACnCK,EAENC,IAAKJ,KAEP,SAACP,EAAD,UAAOO,KACP,UAACN,EAAD,0BACa,uBAAIO,SAXRF,EAed,KAGN,ECPD,EAda,WACX,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,qGACFC,EAAAA,EAAAA,IAAgBP,GADd,OACfQ,EADe,OAErBJ,EAAaI,GAFQ,2CAAH,qDAIpBF,GACD,GAAE,CAACN,KAEG,8BAAGG,IAAa,SAACb,EAAD,CAAUC,KAAMY,KACxC,C,+LCfKM,EAAU,mCACVC,EAAW,+BAEJC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAFb,cACzBI,EADyB,yBAIxBA,EAASL,KAAKM,SAJU,2CAAH,qDAOjBC,EAAY,mCAAG,WAAMC,GAAN,uFACHJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCO,IAF7B,cACpBH,EADoB,yBAInBA,EAASL,KAAKM,SAJK,2CAAH,sDAOZG,EAAe,mCAAG,WAAMjB,GAAN,uFACNY,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAV,EADA,oBACmBS,IAFb,cACvBI,EADuB,yBAItBA,EAASL,MAJa,2CAAH,sDAOfD,EAAe,mCAAG,WAAMP,GAAN,uFACNY,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAV,EADA,4BAC2BS,IAFrB,cACvBI,EADuB,yBAItBA,EAASL,KAAKjB,MAJQ,2CAAH,sDAOf2B,EAAe,mCAAG,WAAMlB,GAAN,uFACNY,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAV,EADA,4BAC2BS,IAFrB,cACvBI,EADuB,yBAItBA,EAASL,KAAKM,SAJQ,2CAAH,qD","sources":["components/CastList/CastList.styled.js","components/CastList/CastList.jsx","pages/Cast/Cast.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  max-width: 200px;\n  border: 1px solid black;\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Image = styled.img`\n  max-width: 200px;\n`;\n\nexport const Name = styled.p`\n  font-weight: 700;\n  padding: 0 10px;\n`;\n\nexport const Character = styled.div`\n  padding: 0 10px;\n\n  p {\n    font-weight: 700;\n  }\n`;\n","import { Character, Image, Item, List, Name } from './CastList.styled';\nimport noPoster from 'img/sorry.png';\n\nexport const CastList = ({ cast }) => {\n  return (\n    <List>\n      {cast.map(({ profile_path, id, name, character }) => {\n        return (\n          <Item key={id}>\n            <Image\n              src={\n                profile_path !== null\n                  ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                  : noPoster\n              }\n              alt={name}\n            />\n            <Name>{name}</Name>\n            <Character>\n              Character: <p>{character}</p>\n            </Character>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieCredits } from 'services/fetchAPI';\nimport { CastList } from 'components/CastList/CastList';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState();\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      const data = await getMovieCredits(movieId);\n      setMovieCast(data);\n    };\n    fetchMovieCast();\n  }, [movieId]);\n\n  return <>{movieCast && <CastList cast={movieCast} />}</>;\n};\nexport default Cast;\n","import axios from 'axios';\n// import { Loader } from '../utils/spinner/spinner';\n\nconst API_KEY = 'e57746b2e4fe98cb5cc839cb405a15f1';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n"],"names":["List","styled","Item","Image","Name","Character","CastList","cast","map","profile_path","id","name","character","src","noPoster","alt","movieId","useParams","useState","movieCast","setMovieCast","useEffect","fetchMovieCast","getMovieCredits","data","API_KEY","BASE_URL","getTrendingMovies","axios","response","results","searchMovies","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}