{"version":3,"file":"static/js/464.937d3dd4.chunk.js","mappings":"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","sources":["components/AdditionalInfo/AdditionalInfo.styled.js","components/AdditionalInfo/AdditionalInfo.jsx","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n`;\n\nexport const LinkWrap = styled.div`\n  display: flex;\n  gap: 30px;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  border: 2px solid orangered;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\n","import { Title, Wrapper, Link, LinkWrap } from './AdditionalInfo.styled';\nimport PropTypes from 'prop-types';\n\nexport const AdditionalInfo = ({ backPath }) => {\n  return (\n    <Wrapper>\n      <Title>Additional information</Title>\n      <LinkWrap>\n        <Link to=\"cast\" state={{ from: backPath }}>\n          Cast\n        </Link>\n        <Link to=\"reviews\" state={{ from: backPath }}>\n          Reviews\n        </Link>\n      </LinkWrap>\n    </Wrapper>\n  );\n};\n\nAdditionalInfo.propTypes = {\n  backPath: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\nimport PropTypes from 'prop-types';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  margin: 20px 0;\n  border: 1px solid black;\n`;\n\nexport const ImageWrap = styled.div`\n  padding: 20px;\n`;\n\nexport const Image = styled.img``;\n\nexport const InfoWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 30px;\n`;\n\nexport const MovieName = styled.h2`\n  font-size: 60px;\n`;\n\nexport const DescriptionName = styled.h3`\n  font-size: 30px;\n\n  p {\n    color: red;\n  }\n`;\n\nexport const Description = styled.p`\n  font-size: 18px;\n`;\n","import {\n  Image,\n  ImageWrap,\n  Wrapper,\n  InfoWrap,\n  MovieName,\n  DescriptionName,\n  Description,\n} from './MovieInfo.styled';\nimport noPoster from 'img/sorry.png';\nimport PropTypes from 'prop-types';\n\nexport const MovieInfo = ({\n  movieInfo: { poster_path, title, vote_average, genres, overview },\n}) => {\n  return (\n    <Wrapper>\n      <ImageWrap>\n        <Image\n          src={\n            poster_path !== null\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : noPoster\n          }\n          alt={title}\n        />\n      </ImageWrap>\n      <InfoWrap>\n        <MovieName>{title}</MovieName>\n        <DescriptionName>\n          User Score: <p>{Math.round(vote_average * 10)}%</p>\n        </DescriptionName>\n        <DescriptionName>Overview</DescriptionName>\n        <Description>{overview}</Description>\n        <DescriptionName>Genres</DescriptionName>\n        <Description>{genres.map(genre => genre.name).join(' , ')}</Description>\n      </InfoWrap>\n    </Wrapper>\n  );\n};\n\nMovieInfo.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  vote_average: PropTypes.number,\n  genres: PropTypes.array,\n  overview: PropTypes.string,\n};\n","import { AdditionalInfo } from 'components/AdditionalInfo/AdditionalInfo';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'services/fetchAPI';\nimport { Loader } from 'utils/spinner/spinner';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const backPath = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      const data = await getMovieDetails(movieId);\n      setMovieDetails(data);\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <main style={{ padding: '0 60px 40px 60px' }}>\n      {movieDetails && (\n        <>\n          <BackLink to={backPath}>Go back</BackLink>\n          <MovieInfo movieInfo={movieDetails} />\n          <AdditionalInfo backPath={backPath} />\n        </>\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\n\nconst API_KEY = 'e57746b2e4fe98cb5cc839cb405a15f1';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    Notify.failure('Oops...Try again');\n    console.log(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    if (response.data.results.length === 0) {\n      Notify.warning('Oops...There are no such movies');\n    }\n    return response.data.results;\n  } catch (error) {\n    Notify.failure('Oops...Try again');\n    console.log(error);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    Notify.failure('Oops...Try again');\n    console.log(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    if (response.data.cast.length === 0) {\n      Notify.warning('Oops...There are no casts');\n    }\n    return response.data.cast;\n  } catch (error) {\n    Notify.failure('Oops...Try again');\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    if (response.data.results.length === 0) {\n      Notify.warning('Oops...There are no reviews');\n    }\n    return response.data.results;\n  } catch (error) {\n    Notify.failure('Oops...Try again');\n    console.log(error);\n  }\n};\n"],"names":["Wrapper","styled","Title","LinkWrap","Link","NavLink","AdditionalInfo","backPath","to","state","from","StyledLink","BackLink","children","size","ImageWrap","Image","InfoWrap","MovieName","DescriptionName","Description","MovieInfo","movieInfo","poster_path","title","vote_average","genres","overview","src","noPoster","alt","Math","round","map","genre","name","join","movieId","useParams","useState","movieDetails","setMovieDetails","useLocation","useEffect","fetchMovieDetails","getMovieDetails","data","style","padding","Suspense","fallback","API_KEY","BASE_URL","getTrendingMovies","axios","response","results","Notify","console","log","searchMovies","query","length","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}